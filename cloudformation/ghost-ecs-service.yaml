AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate Service & Task Definition for Ghost Blog (MVP)

Resources:
  GhostTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: ghost-blog-task
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue ECSExecutionRoleArn
      TaskRoleArn: !ImportValue ECSTaskRoleArn
      ContainerDefinitions:
        - Name: ghost-container
          Image: ghost:5-alpine
          PortMappings:
            - ContainerPort: 2368
          Environment:
            - Name: url
              Value: !Sub
                - "https://${domain}"
                - domain: !ImportValue GhostALBDNS
            - Name: database__client
              Value: mysql
            - Name: database__connection__host
              Value: !ImportValue GhostAuroraEndpoint
            - Name: database__connection__database
              Value: ghost
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: "/ecs/ghost-blog"
              awslogs-region: "eu-north-1"
              awslogs-stream-prefix: "ecs"
          Secrets:
            - Name: database__connection__user
              ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:GhostDBCredentials:username::"
            - Name: database__connection__password
              ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:GhostDBCredentials:password::"
          RepositoryCredentials:
            CredentialsParameter: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:DockerHubCredentials"

  GhostEcsService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: ghost-blog-service
      Cluster: !ImportValue ECSClusterName
      TaskDefinition: !Ref GhostTaskDefinition
      DesiredCount: 2  # 2 instances for better fault tolerance
      LaunchType: FARGATE  # ECS manages compute infrastructure (vs. EC2)
      EnableExecuteCommand: true
      HealthCheckGracePeriodSeconds: 60
      DeploymentController:
        Type: ECS
      DeploymentConfiguration:
        MinimumHealthyPercent: 50  # Ensure at least 50% tasks are healthy during deploy
        MaximumPercent: 200        # Allow new tasks to start before stopping old ones
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED  # No public IPs â€” traffic goes via ALB
          SecurityGroups:
            - !ImportValue GhostAppSecurityGroupId
            - !ImportValue GhostSecretsManagerVPCEndpointSGId
          Subnets:
            - !ImportValue GhostPrivateSubnet1Id
            - !ImportValue GhostPrivateSubnet2Id
      LoadBalancers:
        - TargetGroupArn: !ImportValue GhostTargetGroupArn
          ContainerName: ghost-container
          ContainerPort: 2368

Outputs:
  ECSServiceName:
    Description: "Name of the ECS service for later references"
    Value: !Ref GhostEcsService
