AWSTemplateFormatVersion: '2010-09-09'
Description: ECS Fargate Service & Task Definition for Ghost Blog (MVP)

Parameters:
  Environment:
    Type: String
    Description: Environment name (e.g., dev, test, prod)
    Default: dev
    AllowedValues: [dev, test, prod]

Resources:
  GhostTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "${Environment}-ghost-blog-task"
      Cpu: "512"
      Memory: "1024"
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !ImportValue "${Environment}-ECSExecutionRoleArn"
      TaskRoleArn: !ImportValue "${Environment}-ECSTaskRoleArn"
      ContainerDefinitions:
        - Name: ghost-container
          Image: ghost:5-alpine
          PortMappings:
            - ContainerPort: 2368
          Environment:
            - Name: url
              Value: !Sub
                - "http://${domain}"
                - domain: !ImportValue "${Environment}-GhostALBDNS"
            - Name: database__client
              Value: mysql
            - Name: database__connection__host
              Value: !ImportValue "${Environment}-GhostAuroraEndpoint"
            - Name: database__connection__database
              Value: ghost
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: "/ecs/ghost-blog"
              awslogs-region: "eu-north-1"
              awslogs-stream-prefix: "ecs"
          Secrets:
            - Name: database__connection__user
              ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:GhostDBCredentials:username::"
            - Name: database__connection__password
              ValueFrom: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:GhostDBCredentials:password::"
          RepositoryCredentials:
            CredentialsParameter: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:DockerHubCredentials"
      Tags:
        - Key: Environment
          Value: !Ref Environment
        - Key: Name
          Value: !Sub "${Environment}-ghost-task-definition"

  GhostEcsService:
    Type: AWS::ECS::Service
    Properties:
      ServiceName: !Sub "${Environment}-ghost-blog-service"
      Cluster: !ImportValue "${Environment}-ECSClusterName"
      TaskDefinition: !Ref GhostTaskDefinition
      DesiredCount: 2
      LaunchType: FARGATE
      EnableExecuteCommand: true
      HealthCheckGracePeriodSeconds: 60
      DeploymentController:
        Type: ECS
      DeploymentConfiguration:
        MinimumHealthyPercent: 50
        MaximumPercent: 200
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          SecurityGroups:
            - !ImportValue "${Environment}-GhostAppSecurityGroupId"
            - !ImportValue "${Environment}-GhostSecretsManagerVPCEndpointSGId"
          Subnets:
            - !ImportValue "${Environment}-GhostPrivateSubnet1Id"
            - !ImportValue "${Environment}-GhostPrivateSubnet2Id"
      LoadBalancers:
        - TargetGroupArn: !ImportValue "${Environment}-GhostTargetGroupArn"
          ContainerName: ghost-container
          ContainerPort: 2368
    Tags:
      - Key: Environment
        Value: !Ref Environment
      - Key: Name
        Value: !Sub "${Environment}-ghost-ecs-service"

Outputs:
  ECSServiceName:
    Description: "Name of the ECS service"
    Value: !Ref GhostEcsService
    Export:
      Name: !Sub "${Environment}-ECSServiceName"
