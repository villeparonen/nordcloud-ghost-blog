AWSTemplateFormatVersion: '2010-09-09'
Description: Application Load Balancer & Target Group for Ghost Blog

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues: [dev, test, prod]

Resources:
  # ALB (Application Load Balancer)
  GhostALB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Type: application
      IpAddressType: ipv4
      SecurityGroups:
        - Fn::ImportValue:
            Fn::Sub: "${Environment}-GhostALBSecurityGroupId"
      Subnets:
        - Fn::ImportValue:
            Fn::Sub: "${Environment}-GhostPublicSubnet1Id"
        - Fn::ImportValue:
            Fn::Sub: "${Environment}-GhostPublicSubnet2Id"
      LoadBalancerAttributes:
        - Key: idle_timeout.timeout_seconds
          Value: "60"
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-ghost-alb"
        - Key: Environment
          Value: !Ref Environment

  # Target Group for ECS tasks
  GhostTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Port: 2368
      Protocol: HTTP
      VpcId:
        Fn::ImportValue:
          Fn::Sub: "${Environment}-GhostVPCId"
      TargetType: ip
      HealthCheckProtocol: HTTP
      HealthCheckPath: "/favicon.ico"
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      Tags:
        - Key: Name
          Value: !Sub "${Environment}-ghost-target-group"
        - Key: Environment
          Value: !Ref Environment

  # HTTP Listener only
  GhostALBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - GhostALB
      - GhostTargetGroup
    Properties:
      LoadBalancerArn: !Ref GhostALB
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref GhostTargetGroup
    DeletionPolicy: Delete

Outputs:
  GhostALBArn:
    Description: "ARN of the ALB"
    Value: !Ref GhostALB
    Export:
      Name: !Sub "${Environment}-GhostALBArn"

  ALBDNS:
    Description: "DNS name of the ALB"
    Value: !GetAtt GhostALB.DNSName
    Export:
      Name: !Sub "${Environment}-GhostALBDNS"

  TargetGroupArn:
    Description: "ARN of the Target Group"
    Value: !Ref GhostTargetGroup
    Export:
      Name: !Sub "${Environment}-GhostTargetGroupArn"
